{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectTab","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","handleTabClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACjDC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAQvE,OACE,mCACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAAAH,GAAG,OACV,oBACE,UAAQ,MAERE,UACEE,IAAW,CACT,YAAaN,EAAYG,KAAOD,EAAIC,KAL1C,SASE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAzBJ,SAACN,GAClBH,IAAkBG,EAAIC,IACxBL,EAAUI,GAuBmBO,CAAeP,IAHhC,SAKGA,EAAIQ,SAZFR,EAAIC,WAoBnB,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGJ,EAAYW,gBClDVd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOJ,EAAP,KAAsBe,EAAtB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBP,EAAKI,MAAK,SAAAC,GAAG,OAAIH,IAAkBG,EAAIC,aAD7D,aACsB,EAA4CO,SAGlE,cAAC,EAAD,CACEb,KAAMA,EACNE,cAAeA,EACfD,UAbkB,SAACI,GACvBY,EAAiBZ,EAAIC,WCbzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7bc84b34.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  selectTab: (id: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectTab, selectedTabId }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      selectTab(tab);\n    }\n  };\n\n  return (\n    <>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {\n              tabs.map(tab => (\n                <li\n                  data-cy=\"Tab\"\n                  key={tab.id}\n                  className={\n                    classNames({\n                      'is-active': selectedTab.id === tab.id,\n                    })\n                  }\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => handleTabClick(tab)}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n\n        <div\n          className=\"block\"\n          data-cy=\"TabContent\"\n        >\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs, Tab } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => selectedTabId === tab.id)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        selectTab={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}